{"version":3,"file":"static/js/379.6baf88df.chunk.js","mappings":"mKA+EA,IA5Ee,SAAC,GAA4D,IAA1DA,EAAyD,EAAzDA,IAAKC,EAAoD,EAApDA,UACfC,GAAYC,EAAAA,EAAAA,QAA0B,MACtCC,GAAaD,EAAAA,EAAAA,QAAuB,MAC1C,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KA4BMC,GA5BN,KA4BuB,SAACC,GACtB,IAAMC,EAAgBP,EAAUQ,QAChC,UAAID,QAAJ,IAAIA,GAAAA,EAAeE,cAAe,CAChC,IAAIC,EAAeC,KAAKC,IACtBL,EAAcE,cAAcI,SAASC,KAAKJ,aAC1CH,EAAcE,cAAcI,SAASE,gBAAgBL,aACrDH,EAAcE,cAAcI,SAASC,KAAKE,aAC1CT,EAAcE,cAAcI,SAASE,gBAAgBC,aACrDT,EAAcE,cAAcI,SAASC,KAAKG,aAC1CV,EAAcE,cAAcI,SAASE,gBAAgBE,cAEvDV,EAAcW,OAASR,EAAe,QAW1C,OANAS,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUhB,GAC3B,WACLe,OAAOE,oBAAoB,SAAUjB,MAEtC,KAED,iCACE,gBACEkB,IAAKrB,EACLH,UAAS,UACPK,EAAU,GAAK,SADR,qDAFX,UAME,gBAAKL,UAAW,qBAGlB,mBACEwB,IAAKvB,EACLD,UAAWA,EAAY,UACvBD,IAAKA,EACL0B,YAAY,IACZC,UAAU,KACVC,OAlEqD,SAACpB,GACtDJ,EAAWM,UACbN,EAAWM,QAAQmB,MAAMC,QAAU,SAGrC,IAAMrB,EAAgBD,EAAMuB,cAC5B,GAAItB,EAAcE,cAAe,CAC/BF,EAAcoB,MAAMC,QAAU,QAC9B,IAAIlB,EAAeC,KAAKC,IACtBL,EAAcE,cAAcI,SAASC,KAAKJ,aAC1CH,EAAcE,cAAcI,SAASE,gBAAgBL,aACrDH,EAAcE,cAAcI,SAASC,KAAKE,aAC1CT,EAAcE,cAAcI,SAASE,gBAAgBC,aACrDT,EAAcE,cAAcI,SAASC,KAAKG,aAC1CV,EAAcE,cAAcI,SAASE,gBAAgBE,aApB1C,SAwBbV,EAAcW,OAASR,EAAe,KAGpCR,EAAWM,UACbN,EAAWM,QAAQmB,MAAMC,QAAU,gB,iECZzC,UAZgB,WACd,IAAQE,GAAUC,EAAAA,EAAAA,MAAVD,MACR,OACE,oBAAS/B,UAAU,kEAAnB,UACE,SAAC,IAAD,CACEA,UAAW,8CACXD,IAAG,mDAA8CgC,EAA9C","sources":["components/Iframe/Iframe.tsx","pages/KPNPage/KPNPage.tsx"],"sourcesContent":["import React, { ReactEventHandler, useEffect, useRef, useState } from \"react\";\nconst TABLE_SIZE = 1113.96;\n\nconst Iframe = ({ src, className }: { src: string; className: string }) => {\n  const iframeRef = useRef<HTMLIFrameElement>(null);\n  const loadingRef = useRef<HTMLDivElement>(null);\n  const [visible, setVisible] = useState(true);\n  const onLoadIframe: ReactEventHandler<HTMLIFrameElement> = (event) => {\n    if (loadingRef.current) {\n      loadingRef.current.style.display = \"block\";\n      // setVisible(false);\n    }\n    const iframeElement = event.currentTarget;\n    if (iframeElement.contentWindow) {\n      iframeElement.style.display = \"block\";\n      let scrollHeight = Math.max(\n        iframeElement.contentWindow.document.body.scrollHeight,\n        iframeElement.contentWindow.document.documentElement.scrollHeight,\n        iframeElement.contentWindow.document.body.offsetHeight,\n        iframeElement.contentWindow.document.documentElement.offsetHeight,\n        iframeElement.contentWindow.document.body.clientHeight,\n        iframeElement.contentWindow.document.documentElement.clientHeight,\n        TABLE_SIZE\n      );\n\n      iframeElement.height = scrollHeight + \"px\";\n      // 원래 iframe 내부의 content height 을 불러온다.\n    }\n    if (loadingRef.current) {\n      loadingRef.current.style.display = \"none\";\n      // setVisible(false);\n    }\n  };\n\n  const onResizeIframe = (event: Event) => {\n    const iframeElement = iframeRef.current;\n    if (iframeElement?.contentWindow) {\n      let scrollHeight = Math.max(\n        iframeElement.contentWindow.document.body.scrollHeight,\n        iframeElement.contentWindow.document.documentElement.scrollHeight,\n        iframeElement.contentWindow.document.body.offsetHeight,\n        iframeElement.contentWindow.document.documentElement.offsetHeight,\n        iframeElement.contentWindow.document.body.clientHeight,\n        iframeElement.contentWindow.document.documentElement.clientHeight\n      );\n      iframeElement.height = scrollHeight + \"px\";\n      // 원래 iframe 내부의 content height 을 불러온다.\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener(\"resize\", onResizeIframe);\n    return () => {\n      window.removeEventListener(\"resize\", onResizeIframe);\n    };\n  }, []);\n  return (\n    <>\n      <div\n        ref={loadingRef}\n        className={`${\n          visible ? \"\" : \"hidden\"\n        } flex h-screen w-full items-center justify-center`}\n      >\n        <div className={\"lds-dual-ring\"}></div>\n      </div>\n\n      <iframe\n        ref={iframeRef}\n        className={className + \" hidden\"}\n        src={src}\n        frameBorder=\"0\"\n        scrolling=\"no\"\n        onLoad={onLoadIframe}\n      ></iframe>\n    </>\n  );\n};\n\nexport default Iframe;\n","import React from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nimport Iframe from \"../../components/Iframe/Iframe\";\n\nconst KPNPage = () => {\n  const { kpnId } = useParams();\n  return (\n    <section className=\"mx-auto mt-32 flex w-full max-w-9xl items-center justify-center\">\n      <Iframe\n        className={\"mt-4  w-full  overflow-y-auto px-3 md:mt-12\"}\n        src={`/cattle-market-information-center/iframe/${kpnId}.html`}\n      />\n    </section>\n  );\n};\n\nexport default KPNPage;\n"],"names":["src","className","iframeRef","useRef","loadingRef","useState","visible","onResizeIframe","event","iframeElement","current","contentWindow","scrollHeight","Math","max","document","body","documentElement","offsetHeight","clientHeight","height","useEffect","window","addEventListener","removeEventListener","ref","frameBorder","scrolling","onLoad","style","display","currentTarget","kpnId","useParams"],"sourceRoot":""}