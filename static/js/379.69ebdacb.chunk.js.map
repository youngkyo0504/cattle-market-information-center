{"version":3,"file":"static/js/379.69ebdacb.chunk.js","mappings":"mKA2EA,IA1Ee,SAAC,GAA4D,IAA1DA,EAAyD,EAAzDA,IAAKC,EAAoD,EAApDA,UACfC,GAAYC,EAAAA,EAAAA,QAA0B,MACtCC,GAAaD,EAAAA,EAAAA,QAAuB,MAC1C,GAA8BE,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAwBMC,EAAiB,SAACC,GACtB,IAAMC,EAAgBR,EAAUS,QAChC,UAAID,QAAJ,IAAIA,GAAAA,EAAeE,cAAe,CAChC,IAAIC,EAAeC,KAAKC,IACtBL,EAAcE,cAAcI,SAASC,KAAKJ,aAC1CH,EAAcE,cAAcI,SAASE,gBAAgBL,aACrDH,EAAcE,cAAcI,SAASC,KAAKE,aAC1CT,EAAcE,cAAcI,SAASE,gBAAgBC,aACrDT,EAAcE,cAAcI,SAASC,KAAKG,aAC1CV,EAAcE,cAAcI,SAASE,gBAAgBE,cAEvDV,EAAcW,OAASR,EAAe,OAW1C,OANAS,EAAAA,EAAAA,YAAU,WAER,OADAC,OAAOC,iBAAiB,SAAUhB,GAC3B,WACLe,OAAOE,oBAAoB,SAAUjB,MAEtC,KAED,gCACGF,GACC,gBACEoB,IAAKtB,EACLH,UAAU,mDAFZ,UAIE,gBAAKA,UAAW,oBAEhB,MAEJ,mBACE0B,QAAM,EACNC,QAAQ,OACRF,IAAKxB,EACLD,UAAWA,EACXD,IAAKA,EACL6B,YAAY,IACZC,UAAU,KACVC,OAhEqD,SAACtB,GAC1DuB,QAAQC,IAAIxB,GACZ,IAAMC,EAAgBD,EAAMyB,cAC5B,GAAIxB,EAAcE,cAAe,CAC/BF,EAAcyB,MAAMC,QAAU,QAC9B,IAAIvB,EAAeC,KAAKC,IACtBL,EAAcE,cAAcI,SAASC,KAAKJ,aAC1CH,EAAcE,cAAcI,SAASE,gBAAgBL,aACrDH,EAAcE,cAAcI,SAASC,KAAKE,aAC1CT,EAAcE,cAAcI,SAASE,gBAAgBC,aACrDT,EAAcE,cAAcI,SAASC,KAAKG,aAC1CV,EAAcE,cAAcI,SAASE,gBAAgBE,cAEvDY,QAAQC,IAAIpB,GACZH,EAAcW,OAASR,EAAe,KAGpCT,EAAWO,SAEbJ,GAAW,SAAC8B,GAAD,OAAUA,a,iECP3B,UAZgB,WACd,IAAQC,GAAUC,EAAAA,EAAAA,MAAVD,MACR,OACE,oBAASrC,UAAU,kEAAnB,UACE,SAAC,IAAD,CACEA,UAAW,8CACXD,IAAG,mDAA8CsC,EAA9C","sources":["components/Iframe/Iframe.tsx","pages/KPNPage/KPNPage.tsx"],"sourcesContent":["import React, { ReactEventHandler, useEffect, useRef, useState } from \"react\";\r\nconst Iframe = ({ src, className }: { src: string; className: string }) => {\r\n  const iframeRef = useRef<HTMLIFrameElement>(null);\r\n  const loadingRef = useRef<HTMLDivElement>(null);\r\n  const [visible, setVisible] = useState(true);\r\n  const onLoadIframe: ReactEventHandler<HTMLIFrameElement> = (event) => {\r\n    console.log(event);\r\n    const iframeElement = event.currentTarget;\r\n    if (iframeElement.contentWindow) {\r\n      iframeElement.style.display = \"block\";\r\n      let scrollHeight = Math.max(\r\n        iframeElement.contentWindow.document.body.scrollHeight,\r\n        iframeElement.contentWindow.document.documentElement.scrollHeight,\r\n        iframeElement.contentWindow.document.body.offsetHeight,\r\n        iframeElement.contentWindow.document.documentElement.offsetHeight,\r\n        iframeElement.contentWindow.document.body.clientHeight,\r\n        iframeElement.contentWindow.document.documentElement.clientHeight\r\n      );\r\n      console.log(scrollHeight);\r\n      iframeElement.height = scrollHeight + \"px\";\r\n      // 원래 iframe 내부의 content height 을 불러온다.\r\n    }\r\n    if (loadingRef.current) {\r\n      // loadingRef.current.style.display = \"none\";\r\n      setVisible((per) => !per);\r\n    }\r\n  };\r\n\r\n  const onResizeIframe = (event: Event) => {\r\n    const iframeElement = iframeRef.current;\r\n    if (iframeElement?.contentWindow) {\r\n      let scrollHeight = Math.max(\r\n        iframeElement.contentWindow.document.body.scrollHeight,\r\n        iframeElement.contentWindow.document.documentElement.scrollHeight,\r\n        iframeElement.contentWindow.document.body.offsetHeight,\r\n        iframeElement.contentWindow.document.documentElement.offsetHeight,\r\n        iframeElement.contentWindow.document.body.clientHeight,\r\n        iframeElement.contentWindow.document.documentElement.clientHeight\r\n      );\r\n      iframeElement.height = scrollHeight + \"px\";\r\n      // 원래 iframe 내부의 content height 을 불러온다.\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"resize\", onResizeIframe);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", onResizeIframe);\r\n    };\r\n  }, []);\r\n  return (\r\n    <>\r\n      {visible ? (\r\n        <div\r\n          ref={loadingRef}\r\n          className=\"flex h-screen w-full items-center justify-center\"\r\n        >\r\n          <div className={\"lds-dual-ring\"}></div>\r\n        </div>\r\n      ) : null}\r\n\r\n      <iframe\r\n        hidden\r\n        loading=\"lazy\"\r\n        ref={iframeRef}\r\n        className={className}\r\n        src={src}\r\n        frameBorder=\"0\"\r\n        scrolling=\"no\"\r\n        onLoad={onLoadIframe}\r\n      ></iframe>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Iframe;\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport Iframe from \"../../components/Iframe/Iframe\";\r\n\r\nconst KPNPage = () => {\r\n  const { kpnId } = useParams();\r\n  return (\r\n    <section className=\"mx-auto mt-32 flex w-full max-w-9xl items-center justify-center\">\r\n      <Iframe\r\n        className={\"mt-4  w-full  overflow-y-auto px-3 md:mt-12\"}\r\n        src={`/cattle-market-information-center/iframe/${kpnId}.html`}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default KPNPage;\r\n"],"names":["src","className","iframeRef","useRef","loadingRef","useState","visible","setVisible","onResizeIframe","event","iframeElement","current","contentWindow","scrollHeight","Math","max","document","body","documentElement","offsetHeight","clientHeight","height","useEffect","window","addEventListener","removeEventListener","ref","hidden","loading","frameBorder","scrolling","onLoad","console","log","currentTarget","style","display","per","kpnId","useParams"],"sourceRoot":""}